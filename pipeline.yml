version: "1.1"
name: ""
"on":
  push:
    branches:
      - master
      - release/*
    tags:
      - v*
cron: 0 0 10,13,16,19,23 * * ?
stages:
  - stage:
      - git-checkout:
          alias: erda-ui
          description: 代码仓库克隆
          version: "1.0"
          params:
            branch: ((gittar.branch))
            depth: 1
            uri: https://erda.cloud/erda/dop/erda-project/erda-ui
      - git-checkout:
          alias: erda-ui-enterprise
          description: 代码仓库克隆
          version: "1.0"
          params:
            branch: ((gittar.branch))
            depth: 1
            uri: https://erda.cloud/erda/dop/erda-project/erda-ui-enterprise
  - stage:
      - extract-repo-version:
          alias: ui-version
          description: 从 git 代码仓库中解析提交信息，生成仓库版本
          params:
            git_dir: ${{ dirs.erda-ui }}
      - extract-repo-version:
          alias: ui-enterprise-version
          description: 从 git 代码仓库中解析提交信息，生成仓库版本
          params:
            git_dir: ${{ dirs.erda-ui-enterprise }}
  - stage:
      - js-build:
          alias: build-erda-ui
          description: 针对 nodejs 工程的编译打包任务
          version: "1.0"
          params:
            build_cmd:
              - cd ${{ dirs.erda-ui }}/shell && npm run extra-logic
              - cd ${{ dirs.erda-ui }}
              - npm i -g --force pnpm@6.x
              - pnpm i --frozen-lockfile --no-optional --unsafe-perm
              - pnpm run build-online
              - cp -r ${{ dirs.erda-ui }}/{public,scheduler} $WORKDIR
            node_version: 14
          resources:
            cpu: 0.5
            mem: 6144
          caches:
            - key: '{{basePath}}/build-cache-community/{{endPath}}'
              path: ${{ dirs.erda-ui }}/node_modules
      - js-build:
          alias: build-erda-ui-enterprise
          description: 针对 nodejs 工程的编译打包任务
          version: "1.0"
          params:
            build_cmd:
              - cd ${{ dirs.erda-ui-enterprise }}/admin && npm i
              - npm run build
              - cp -r ${{ dirs.erda-ui-enterprise }}/{public,server} $WORKDIR
            node_version: 14
          resources:
            cpu: 0.5
            mem: 2048
          caches:
            - key: '{{basePath}}/build-cache-enterprise/{{endPath}}'
              path: ${{ dirs.erda-ui }}/node_modules
  - stage:
      - dockerfile:
          alias: build-erda-ui-image
          description: 针对自定义 dockerfile 打包，产出可运行镜像
          version: "1.0"
          params:
            image:
              name: ui
              tag: ${{ outputs.ui-version.image_tag }}
            path: ${{ dirs.erda-ui }}/Dockerfile
            registry:
              password: ${{ configs.docker_registry_password }}
              url: ${{ configs.docker_registry }}
              username: ${{ configs.docker_registry_username }}
            workdir: ${{ dirs.build-erda-ui }}
          image: registry.erda.cloud/erda-actions/dockerfile-action:1.0-20230424150226-5fd86c2
          resources:
            cpu: 0.5
            mem: 2048
      - dockerfile:
          alias: build-erda-ui-enterprise-image
          description: 针对自定义 dockerfile 打包，产出可运行镜像
          version: "1.0"
          params:
            image:
              name: ui-enterprise
              tag: ${{ outputs.ui-enterprise-version.image_tag }}
            path: ${{ dirs.erda-ui-enterprise }}/Dockerfile
            registry:
              password: ${{ configs.docker_registry_password }}
              url: ${{ configs.docker_registry }}
              username: ${{ configs.docker_registry_username }}
            workdir: ${{ dirs.build-erda-ui-enterprise }}
          image: registry.erda.cloud/erda-actions/dockerfile-action:1.0-20230424150226-5fd86c2
          resources:
            cpu: 0.5
            mem: 2048
  - stage:
      - release:
          alias: release-ui
          description: 用于打包完成时，向dicehub 提交完整可部署的dice.yml。用户若没在pipeline.yml里定义该action，CI会自动在pipeline.yml里插入该action
          version: "1.0"
          params:
            check_diceyml: false
            cross_cluster: "true"
            dice_yml: ${{ dirs.erda-ui }}/erda.yml
            image:
              enterprise-ui: ${{ outputs.build-erda-ui-enterprise-image.image }}
              ui: ${{ outputs.build-erda-ui-image.image }}
            tag_version: ${{ outputs.ui-version.version }}
          resources:
            cpu: 0.5
            mem: 512